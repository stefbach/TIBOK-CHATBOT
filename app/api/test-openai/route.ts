import { NextRequest, NextResponse } from 'next/server'

// Interface pour la requ√™te
interface ChatRequest {
  message: string
  language: string
}

// Interface pour les r√©sultats de diagnostic
interface DiagnosticResult {
  test: string
  result: boolean
  details: string
  timestamp: string
}

// üîç FONCTION DE DIAGNOSTIC OPENAI AVANC√âE
const diagnosticOpenAI = async (apiKey: string): Promise<DiagnosticResult[]> => {
  const tests: DiagnosticResult[] = []
  const timestamp = new Date().toISOString()
  
  // Test 1: V√©rifier le format de la cl√©
  const formatTest = {
    test: "Format cl√© API",
    result: !!(apiKey && apiKey.startsWith('sk-') && apiKey.length > 50),
    details: `Longueur: ${apiKey?.length || 0}, Pr√©fixe: ${apiKey?.substring(0, 7) || 'N/A'}`,
    timestamp
  }
  tests.push(formatTest)
  console.log('üîç Test format:', formatTest)

  if (!formatTest.result) {
    return tests // Arr√™ter si le format est incorrect
  }

  // Test 2: Test de connectivit√© API avec gestion d'erreurs d√©taill√©e
  try {
    console.log('üåê Test de connectivit√© vers OpenAI...')
    const response = await fetch('https://api.openai.com/v1/models', {
      method: 'GET',
      headers: {
        'Authorization': `Bearer ${apiKey}`,
        'Content-Type': 'application/json',
        'User-Agent': 'TIBOK-App/1.0'
      },
      signal: AbortSignal.timeout(10000) // Timeout de 10 secondes
    })
    
    console.log('üì° R√©ponse OpenAI status:', response.status)
    console.log('üì° Headers:', Object.fromEntries(response.headers.entries()))

    if (response.ok) {
      const data = await response.json()
      
      tests.push({
        test: "Connectivit√© API",
        result: true,
        details: `Status: ${response.status} OK - ${data.data?.length || 0} mod√®les disponibles`,
        timestamp
      })

      // Test 3: V√©rifier la disponibilit√© des mod√®les GPT
      const gptModels = data.data?.filter((model: any) => 
        model.id.includes('gpt') && 
        (model.id.includes('3.5') || model.id.includes('4'))
      ) || []

      const hasGPT35 = gptModels.some((m: any) => m.id.includes('gpt-3.5-turbo'))
      const hasGPT4 = gptModels.some((m: any) => m.id.includes('gpt-4'))

      tests.push({
        test: "Mod√®les GPT disponibles",
        result: gptModels.length > 0,
        details: `GPT-3.5: ${hasGPT35 ? '‚úÖ' : '‚ùå'}, GPT-4: ${hasGPT4 ? '‚úÖ' : '‚ùå'}, Total: ${gptModels.length}`,
        timestamp
      })

      console.log('ü§ñ Mod√®les GPT trouv√©s:', gptModels.map((m: any) => m.id).slice(0, 5))

    } else {
      const errorText = await response.text()
      let errorDetails = `Status: ${response.status}`
      
      // Analyse sp√©cifique des erreurs
      switch (response.status) {
        case 401:
          errorDetails += " - Cl√© API invalide, expir√©e ou r√©voqu√©e"
          break
        case 403:
          errorDetails += " - Acc√®s interdit - v√©rifiez les permissions"
          break
        case 429:
          errorDetails += " - Quota d√©pass√© ou limite de taux atteinte"
          break
        case 500:
          errorDetails += " - Erreur serveur OpenAI"
          break
        default:
          errorDetails += ` - ${errorText.substring(0, 100)}`
      }

      tests.push({
        test: "Connectivit√© API",
        result: false,
        details: errorDetails,
        timestamp
      })

      console.log('‚ùå Erreur OpenAI HTTP:', response.status, errorText)
    }

  } catch (error: any) {
    let errorDetails = "Erreur r√©seau"
    
    if (error.name === 'AbortError') {
      errorDetails = "Timeout - OpenAI ne r√©pond pas dans les d√©lais"
    } else if (error.message.includes('fetch')) {
      errorDetails = "Erreur de connectivit√© r√©seau"
    } else {
      errorDetails = `Erreur: ${error.message}`
    }

    tests.push({
      test: "Connectivit√© API",
      result: false,
      details: errorDetails,
      timestamp
    })

    console.log('‚ùå Erreur r√©seau OpenAI:', error)
  }

  return tests
}

// ü§ñ R√âPONSES INTELLIGENTES TIBOK (avec FAQ int√©gr√©es)
const getTibokResponse = (message: string, language: string): string => {
  const lowerMessage = message.toLowerCase()
  
  // üè• D√©tection de questions m√©dicales
  const medicalKeywords = [
    'sympt√¥me', 'symptome', 'douleur', 'mal', 'maladie', 'traitement', 'm√©dicament', 'medicament',
    'diagnostic', 'fi√®vre', 'fievre', 'toux', 'migraine', 'allergie', 'infection', 'virus',
    'symptom', 'pain', 'sick', 'illness', 'disease', 'treatment', 'medication', 'fever', 'cough',
    'malad', 'doul√®r', 'fi√®v', 'latous', 'mizer', 'tr√®tman', 'medikaman', 'lasante'
  ]
  
  if (medicalKeywords.some(keyword => lowerMessage.includes(keyword))) {
    const medicalResponses = {
      fr: "üö® **ATTENTION : Question m√©dicale d√©tect√©e**\n\nJe ne peux pas r√©pondre aux questions m√©dicales. Pour toute question concernant votre sant√© :\n\nü©∫ **PRENEZ UNE CONSULTATION AVEC UN DOCTEUR TIBOK**\n\n‚úÖ Diagnostic professionnel par un docteur mauricien qualifi√©\nüí∞ Tarif unique : 1150 rs tout compris\n‚è∞ Disponible 8h-minuit, 7j/7\nüá≤üá∫ M√©decins inscrits au Medical Council de Maurice\n\n**üìç Service disponible :** Maurice + Rodrigues\n\nComment puis-je vous aider concernant notre **service** ?",
      en: "üö® **ATTENTION: Medical question detected**\n\nI cannot answer medical questions. For any question about your health:\n\nü©∫ **TAKE A CONSULTATION WITH A TIBOK DOCTOR**\n\n‚úÖ Professional diagnosis by a qualified Mauritian doctor\nüí∞ Unique price: 1150 rs all inclusive\n‚è∞ Available 8am-midnight, 7/7\nüá≤üá∫ Doctors registered with Medical Council of Mauritius\n\n**üìç Service available:** Mauritius + Rodrigues\n\nHow can I help you with our **service**?",
      mf: "üö® **ATANSION: Kestion medical detekte**\n\nMo pa capav repond kestion medical. Pou tout kestion lor ou lasante:\n\nü©∫ **AL CONSULTE ENN DOKTER TIBOK**\n\n‚úÖ Diagnostic profesionel par enn dokter morisien kalifie\nüí∞ Prix innik: 1150 rs tout compris\n‚è∞ Disponib 8h-minwi, 7/7\nüá≤üá∫ Dokter anrezistre kot Medical Council Moris\n\n**üìç Servis disponib:** Moris + Rodrigues\n\nKi manyer mo capav ede ou ek nou **servis**?"
    }
    return medicalResponses[language] || medicalResponses.fr
  }

  // ... (garder toutes les autres r√©ponses intelligentes du code original)

  // üåç R√©ponse g√©n√©rale par d√©faut
  const defaultResponses = {
    fr: "üá≤üá∫ **TIBOK - Votre sant√©, notre priorit√© !**\n\n‚ú® **Service t√©l√©consultation 100% mauricien**\nüí∞ **1150 rs tout compris** (consultation + livraison)\n‚è∞ **8h-minuit, 7j/7** - M√™me weekends et jours f√©ri√©s\nü©∫ **M√©decins mauriciens** inscrits au Medical Council\nüöö **Livraison gratuite** m√©dicaments √† domicile\nüö´ **Sans rendez-vous** - Premier arriv√©, premier servi\nüîí **100% s√©curis√©** et confidentiel\n\n‚ùì **Questions fr√©quentes :**\n‚Ä¢ \"Quels sont vos tarifs et ce qui est inclus ?\"\n‚Ä¢ \"Comment consulter un m√©decin maintenant ?\"\n‚Ä¢ \"Quels sont vos horaires de disponibilit√© ?\"\n‚Ä¢ \"Comment fonctionne la livraison de m√©dicaments ?\"\n‚Ä¢ \"Mes donn√©es sont-elles s√©curis√©es ?\"\n‚Ä¢ \"Quelles sont les limites du service ?\"\n\nü©∫ **Pr√™t(e) pour une consultation avec un m√©decin mauricien ?**",
    en: "üá≤üá∫ **TIBOK - Your health, our priority!**\n\n‚ú® **100% Mauritian teleconsultation service**\nüí∞ **1150 rs all inclusive** (consultation + delivery)\n‚è∞ **8am-midnight, 7/7** - Even weekends and holidays\nü©∫ **Mauritian doctors** registered with Medical Council\nüöö **Free delivery** medications at home\nüö´ **No appointments** - First come, first served\nüîí **100% secure** and confidential\n\n‚ùì **Frequent questions:**\n‚Ä¢ \"What are your prices and what's included?\"\n‚Ä¢ \"How to consult a doctor now?\"\n‚Ä¢ \"What are your availability hours?\"\n‚Ä¢ \"How does medication delivery work?\"\n‚Ä¢ \"Is my data secure?\"\n‚Ä¢ \"What are the service limits?\"\n\nü©∫ **Ready for a consultation with a Mauritian doctor?**",
    mf: "üá≤üá∫ **TIBOK - Ou lasante, nou priorite !**\n\n‚ú® **Servis t√©l√©consultation 100% morisien**\nüí∞ **1150 rs tout compris** (konsultasion + livrezon)\n‚è∞ **8h-minwi, 7/7** - Mem weekend ek zour konze\nü©∫ **Dokter morisien** anrezistre kot Medical Council\nüöö **Livrezon gratui** medikaman lakaz\nüö´ **San randevou** - Premie arive, premie servi\nüîí **100% sekirize** ek konfidansiel\n\n‚ùì **Kestion frekant :**\n‚Ä¢ \"Ki nou prix ek sa ki compris ?\"\n‚Ä¢ \"Kouma konsulte enn dokter astere ?\"\n‚Ä¢ \"Ki nou ler disponibilite ?\"\n‚Ä¢ \"Kouma livrezon medikaman marse ?\"\n‚Ä¢ \"Eski mo done sekirize ?\"\n‚Ä¢ \"Ki limit servis-la ?\"\n\nü©∫ **Pare pou enn konsultasion avek enn dokter morisien ?**"
  }
  
  return defaultResponses[language] || defaultResponses.fr
}

// Configuration des prompts syst√®me par langue
const getSystemPrompt = (language: string): string => {
  const systemPrompts: Record<string, string> = {
    fr: `Tu es un assistant pour TIBOK, un service de t√©l√©consultation m√©dicale 100% mauricien.

INFORMATIONS IMPORTANTES SUR TIBOK :
- Service 100% mauricien avec des docteurs mauriciens inscrits au Medical Council
- Disponible 8h √† minuit, 7 jours sur 7 (m√™me weekends et jours f√©ri√©s)
- Tarif unique : 1150 rs tout compris (consultation + livraison)
- Couverture : Maurice + Rodrigues
- Livraison de m√©dicaments incluse et souvent gratuite (8h-17h)
- Service premier arriv√©, premier servi, pas de rendez-vous
- Consultation imm√©diate via plateforme web s√©curis√©e
- M√©decins parlent fran√ßais, anglais et cr√©ole mauricien
- Donn√©es 100% s√©curis√©es et confidentielles

TON R√îLE :
- Renseigner sur le service TIBOK uniquement avec les FAQ d√©taill√©es
- Ne JAMAIS donner de conseils m√©dicaux
- Rediriger vers une consultation pour toute question m√©dicale
- Identifier et rediriger les urgences vers le 114/999
- √ätre chaleureux, professionnel et utiliser des emojis appropri√©s
- Clarifier les limites du service (pas pour urgences, fractures, examens physiques)`,

    en: `You are an assistant for TIBOK, a 100% Mauritian medical teleconsultation service.

IMPORTANT INFORMATION ABOUT TIBOK:
- 100% Mauritian service with Mauritian doctors registered with Medical Council
- Available 8am to midnight, 7 days a week (even weekends and holidays)
- Unique price: 1150 rs all inclusive (consultation + delivery)
- Coverage: Mauritius + Rodrigues
- Medication delivery included and often free (8am-5pm)
- First come, first served service, no appointments needed
- Immediate consultation via secure web platform
- Doctors speak French, English and Mauritian Creole
- 100% secure and confidential data`,

    mf: `Ou enn assistant pou TIBOK, enn servis t√©l√©consultation medical 100% morisien.

INFORMASION IMPORTAN LOR TIBOK:
- Servis 100% morisien ek dokter morisien anrezistre kot Medical Council
- Disponib 8h-minwi, 7 zour lor 7 (mem weekend ek zour konze)
- Prix innik: 1150 rs tout compris (konsultasion + livrezon)
- Kouvertur: Moris + Rodrigues  
- Livrezon medikaman compris ek souvan gratui (8h-17h)
- Servis premie arive premie servi, pa bizin randevou
- Konsultasion imedia travei platform web sekirize
- Dokter koz franse, angle ek kreol morisien
- Done 100% sekirize ek konfidansiel`
  }

  return systemPrompts[language] || systemPrompts.fr
}

// üîß FONCTION PRINCIPALE DE L'API
export async function POST(request: NextRequest) {
  const startTime = Date.now()
  
  try {
    const { message, language }: ChatRequest = await request.json()

    // Validation des donn√©es
    if (!message || !language) {
      return NextResponse.json(
        { error: 'Message et langue requis' },
        { status: 400 }
      )
    }

    console.log('üöÄ TIBOK API v3.0 - Diagnostic avanc√©')
    console.log('üì• Message:', message.substring(0, 50) + '...')
    console.log('üåç Langue:', language)

    // R√©cup√©ration et v√©rification de la cl√© API
    const apiKey = process.env.OPENAI_API_KEY
    
    console.log('üîç Variables d\'environnement:')
    console.log('  - OPENAI_API_KEY pr√©sente:', !!apiKey)
    console.log('  - NODE_ENV:', process.env.NODE_ENV)
    
    // üîß TENTATIVE OPENAI AVEC DIAGNOSTIC AVANC√â
    if (apiKey && apiKey.startsWith('sk-')) {
      console.log('üß™ Lancement du diagnostic OpenAI...')
      
      const diagnosticResults = await diagnosticOpenAI(apiKey)
      const isOpenAIReady = diagnosticResults.every(test => test.result)
      
      console.log('üìä R√©sultats diagnostic:')
      diagnosticResults.forEach(test => {
        console.log(`  ${test.result ? '‚úÖ' : '‚ùå'} ${test.test}: ${test.details}`)
      })

      if (isOpenAIReady) {
        console.log('üéØ OpenAI op√©rationnel - Tentative de g√©n√©ration...')
        
        try {
          const requestBody = {
            model: 'gpt-3.5-turbo',
            max_tokens: 800,
            temperature: 0.7,
            messages: [
              {
                role: 'system',
                content: getSystemPrompt(language),
              },
              {
                role: 'user',
                content: message,
              },
            ],
          }

          const response = await fetch('https://api.openai.com/v1/chat/completions', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
              'Authorization': `Bearer ${apiKey}`,
            },
            body: JSON.stringify(requestBody),
            signal: AbortSignal.timeout(30000) // Timeout de 30 secondes
          })

          console.log('üì§ R√©ponse g√©n√©ration OpenAI:', response.status)

          if (response.ok) {
            const data = await response.json()
            
            if (data.choices?.[0]?.message?.content) {
              const processingTime = Date.now() - startTime
              console.log(`‚úÖ OpenAI r√©ussi en ${processingTime}ms`)
              
              return NextResponse.json({ 
                response: data.choices[0].message.content,
                mode: 'openai_success',
                diagnostics: diagnosticResults,
                processingTime,
                timestamp: new Date().toISOString(),
                version: '3.0_with_advanced_diagnostics'
              })
            } else {
              console.log('‚ö†Ô∏è OpenAI r√©ponse sans contenu')
            }
          } else {
            const errorText = await response.text()
            console.log('‚ùå OpenAI erreur g√©n√©ration:', response.status, errorText)
          }
        } catch (generationError: any) {
          console.log('‚ùå Erreur g√©n√©ration OpenAI:', generationError.message)
        }
      } else {
        console.log('‚ùå OpenAI non op√©rationnel - Diagnostic √©chou√©')
      }
    } else {
      console.log('‚ö†Ô∏è Cl√© OpenAI manquante ou format invalide')
    }
    
    // ü§ñ FALLBACK VERS MODE INTELLIGENT
    console.log('‚ú® Fallback vers mode intelligent avec FAQ d√©taill√©es')
    const intelligentResponse = getTibokResponse(message, language)
    const processingTime = Date.now() - startTime
    
    return NextResponse.json({ 
      response: intelligentResponse,
      mode: 'intelligent_fallback',
      processingTime,
      timestamp: new Date().toISOString(),
      version: '3.0_intelligent_fallback',
      diagnostics: apiKey ? await diagnosticOpenAI(apiKey) : []
    })

  } catch (error: any) {
    const processingTime = Date.now() - startTime
    console.error('üí• Erreur g√©n√©rale:', error)
    
    // Messages d'erreur par langue
    const errorMessages: Record<string, string> = {
      fr: `üá≤üá∫ **TIBOK reste disponible !**\n\n‚úÖ **Service op√©rationnel :**\nüë®‚Äç‚öïÔ∏è M√©decins mauriciens disponibles 8h-minuit 7j/7\nüí∞ Tarif unique : 1150 rs tout compris\nüöö Livraison m√©dicaments incluse\nüîí 100% s√©curis√© et confidentiel\n\nü©∫ **Voulez-vous consulter directement ?**\nüìû Support technique disponible si besoin`,
      en: `üá≤üá∫ **TIBOK remains available!**\n\n‚úÖ **Service operational:**\nüë®‚Äç‚öïÔ∏è Mauritian doctors available 8am-midnight 7/7\nüí∞ Unique price: 1150 rs all inclusive\nüöö Medication delivery included\nüîí 100% secure and confidential\n\nü©∫ **Would you like to consult directly?**\nüìû Technical support available if needed`,
      mf: `üá≤üá∫ **TIBOK reste disponib!**\n\n‚úÖ **Servis operasionel:**\nüë®‚Äç‚öïÔ∏è Dokter morisien disponib 8h-minwi 7/7\nüí∞ Prix innik: 1150 rs tout compris\nüöö Livrezon medikaman compris\nüîí 100% sekirize ek konfidansiel\n\nü©∫ **Ou anvi konsulte direct?**\nüìû Sipor teknik disponib si bizin`,
    }

    const { language } = await request.json().catch(() => ({ language: 'fr' }))
    const errorMessage = errorMessages[language] || errorMessages.fr

    return NextResponse.json({ 
      response: errorMessage,
      mode: 'error_fallback',
      error: error.message,
      processingTime,
      timestamp: new Date().toISOString(),
      version: '3.0_error_handling'
    })
  }
}
